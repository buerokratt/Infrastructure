name: Kubernetes cd
on:
  push:
    branches:
    - yahya/features/mock-classifier-helm-chart
  # workflow_dispatch:
  #   inputs:
  #     app_name:
  #       type: string
  #       required: true 
  #       description: Specifies the app name which is required to reference the correct helm chart
  #     image_tag:
  #       type: string
  #       required: true
  #       description: Specifies the docker image tag which is required to reference the latest image version
  #     image_pull_secret_name:
  #       type: string
  #       required: true
  #       description: Specifies the imagePullSecretName which is required for a container registry pull
env:
  helm_chart_directory_path: ./helm-charts
  temporary_upload_artifact_directory: ./temp/upload/packages
  temporary_download_artifact_directory: ./temp/download/packages
  container_registry_domain: ghcr.io
  container_registry_domain_suffix: buerokratt
  namespace: applications
  #delete
  app_name: mock-classifier
  image_tag: 89581bcf2718cc49eb3afdce9ebb848f1d7236e4
  image_pull_secret_name: byrokratt
  ###
permissions:
      contents: read
      packages: read

jobs:
  package_and_upload_helm_chart:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Setup Helm
       uses: azure/setup-helm@v1

     - name: Lint Helm chart
       run: |
          helm lint $helm_chart_directory_path/$app_name

      #ToDo: sign chart
     - name: Package Helm chart
       run: |
         mkdir -p $temporary_upload_artifact_directory
         helm package $helm_chart_directory_path/$app_name --destination $temporary_upload_artifact_directory
    
     - name: Upload Helm package artifacts
       uses: actions/upload-artifact@v3.0.0
       with: 
        name: helm-package-${{ github.run_id }}
        path: ${{ env.temporary_upload_artifact_directory }}

  download_and_deploy_helm_package:
    needs: package_and_upload_helm_chart
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      packages: read
    steps:       
     - name: Create temporary working directory for artifacts
       run: |
        mkdir -p $temporary_download_artifact_directory
  
     - name: Download Helm package artifacts
       uses: actions/download-artifact@v3
       with:
        name: helm-package-${{ github.run_id }}
        path: ${{ env.temporary_download_artifact_directory }}
     
     - name: Get AKS Credentials
       uses: Azure/aks-set-context@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        # Resource Group Name
        resource-group: rgbeurokrattdev
        # AKS Cluster Name
        cluster-name: bykaksdev

     - name: Check/create namespace for Kubernetes
       run: |
        check_namespace=$(kubectl get namespace $namespace --ignore-not-found) 
        if ! [[ $check_namespace ]]; then 
          kubectl create namespace $namespace 
        fi 

     - name: Check/create Kubernetes secret
       run: |
        check_secret=$(kubectl get secret $image_pull_secret_name --namespace $namespace --ignore-not-found) 
        if ! [[ $check_secret ]]; then 
          kubectl create secret docker-registry $image_pull_secret_name \
          --namespace $namespace \
          --docker-server=ghcr.io \
          --docker-username=notneeded \
          --docker-password=${{ secrets.GITHUB_TOKEN }} 
        fi

     - name: Setup Helm
       uses: azure/setup-helm@v1
     
     - name: Deploy to Kubernetes cluster
       run: |
        helm upgrade \
        $app_name \
        $temporary_download_artifact_directory/*.tgz \
        --install \
        --namespace=$namespace \
        --set image.tag=$image_tag \
        --set image.repository=$container_registry_domain/$container_registry_domain_suffix/$app_name \
        --set imagePullSecrets[0].name=$image_pull_secret_name
