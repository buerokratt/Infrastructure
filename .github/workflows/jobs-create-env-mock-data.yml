#
# Create mock data workflow
# 
# This workflow creates mock institutions and participants for the given envrionment 
# so we can run tests against it.
#

name: Mock up data for environment

on:
  workflow_call:
    inputs:
      environment_name:
        type: string
        required: true
    secrets:
      API_key:
        required: true

jobs:
  create_mock_data:
    env:
      baseAKSURL: https://byk-${{ inputs.environment_name }}-aks-ingress.westeurope.cloudapp.azure.com
      centopsAdminInstitutionRoute: centops/admin/institutions
      centopsParticipantsRoute: centops/admin/participants
      dmrRoute: dmr/messages
      mockBotRoute: mock-bot/dmr-api
      mockClassifierRoute: mock-classifier/dmr-api/messages
      institutionName: mock-institution
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Teardown mock data
        run: |
          institutions=$(curl \
          -X GET \
          -H "Content-Type: application/json" \
          -H "X-Api-Key: ${{ secrets.API_key }}" \
          ${{ env.baseAKSURL }}/${{ env.centopsAdminInstitutionRoute }} \
          )

          institutionsByName=""

          if [ ${#institutions} -gt 2 ] 
          then
            institutionsByName=$( echo "$institutions" | jq -c '[.[] | select(.name | contains("${{ env.institutionName }}"))]' )
          fi

          if [ ${#institutionsByName} -gt 2 ] 
          then
          #Participants            
            participants=$(curl \
            -X GET \
            -H "Content-Type: application/json" \
            -H "X-Api-Key: ${{ secrets.API_key }}" \
            ${{ env.baseAKSURL }}/${{ env.centopsParticipantsRoute }} \
            )

            if [ ${#participants} -gt 2 ] 
              then
                institutionIdDelete=$( echo "$institutionsByName" | jq -c '[.[].id]' )      
                participantsToDelete=$(echo $participants | jq -r '[.[] | select(.institutionId == ('"$institutionIdDelete"'|unique[]))]')

                echo $participantsToDelete | jq -r '.[].id' | while read id ; do 
                  url=$(echo "${{ env.baseAKSURL }}/${{ env.centopsParticipantsRoute }}/${id}" | xargs)
                  curl \
                  -X DELETE \
                  -H "X-Api-Key: ${{ secrets.API_key }}" \
                  $url
                done
              fi

          #institutions
            echo $institutionsByName | jq -r '.[].id' | while read id ; do 
              url=$(echo "${{ env.baseAKSURL }}/${{ env.centopsAdminInstitutionRoute }}/${id}" | xargs)
              curl \
              -X DELETE \
              -H "X-Api-Key: ${{ secrets.API_key }}" \
              $url
            done
          fi  

      - name: Create mock data
        run: |
          createInstitutionResponse=$(curl \
          -X POST \
          -H "Content-Type: application/json" \
          -H "X-Api-Key: ${{ secrets.API_key }}" \
          -d '{"name": "mock-institution","status": "Active"}' \
          ${{ env.baseAKSURL }}/${{ env.centopsAdminInstitutionRoute }} \
          )

          institutionId=$(jq -r '.id' <<< $createInstitutionResponse)

          #DMR
          curl \
          -X POST \
          -H "Content-Type: application/json" \
          -H "X-Api-Key: ${{ secrets.API_key }}" \
          -d '{"name": "mock-dmr","institutionId": "'$institutionId'","host": "${{ env.baseAKSURL }}/${{ env.dmrRoute }}","type":"Dmr","status": "Active","apiKey":"${{ secrets.API_key }}"}' \
          ${{ env.baseAKSURL }}/${{ env.centopsParticipantsRoute }}

          #MockBot
          curl \
          -X POST \
          -H "Content-Type: application/json" \
          -H "X-Api-Key: ${{ secrets.API_key }}" \
          -d '{"name": "mock-bot","institutionId": "'$institutionId'","host": "${{ env.baseAKSURL }}/${{ env.mockBotRoute }}","type":"Chatbot","status": "Active","apiKey":"${{ secrets.API_key }}"}' \
          ${{ env.baseAKSURL }}/${{ env.centopsParticipantsRoute }}

          #MockClassifier
          curl \
          -X POST \
          -H "Content-Type: application/json" \
          -H "X-Api-Key: ${{ secrets.API_key }}" \
          -d '{"name": "mock-classifier","institutionId": "'$institutionId'","host": "${{ env.baseAKSURL }}/${{ env.mockClassifierRoute }}","type":"Classifier","status": "Active","apiKey":"${{ secrets.API_key }}"}' \
          ${{ env.baseAKSURL }}/${{ env.centopsParticipantsRoute }}