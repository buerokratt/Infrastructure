# Default values for dmr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [] 
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#appSettings/environment values
appSettings:
  MOCKCENTOPS__CHATBOTS__0__ID: bot1
  MOCKCENTOPS__CHATBOTS__0__ENDPOINT: http://bot2/dmr-api/messages
  MOCKCENTOPS__CHATBOTS__1__ID: bot2
  MOCKCENTOPS__CHATBOTS__1__ENDPOINT: http://bot2/dmr-api/messages
  DMRSERVICESETTINGS__CLASSIFIERURI: http://classifier/dmr-api/messages
  DMRSERVICESETTINGS__CENTOPSURI: http://centops
  
appSecrets:
  # PLEASE DO NOT LIST ANY APP SECRETS HERE! THIS IS A PUBLIC REPO, HARDCODED SECRETS CAN BE PUBLICLY READ
  # For any app secrets e.g. database key, typically stored in the appsettings.json (.Net),
  # please feed them as pipeline style secrets through the Github workflow file reusable-k8s-deployment.yml
  # this is a place holder object, so they will be overwritten through the helm commands.
  # In helm syntax this would be for example: helm upgrade --install ... --set cosmosDbKey=${{ secrets.CosmosDbKey }}.
  # Please also ensure you capture any secrets in the secrets.yaml manifest under the data object e.g.
  #  data:
  #    testKey: {{ default "" .Values.appSecrets.cosmosDbKey | b64enc | quote }}